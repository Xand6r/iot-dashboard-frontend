{"version":3,"sources":["components/list/List.js","pages/home/Home.js","api/index.js","components/table/Table.js","components/table/statistic/chart.js","components/table/statistic/Statistics.js","pages/dashboard/Index.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_DATA","name","title","InfiniteListExample","state","data","className","dataSource","this","renderItem","item","index","to","Item","Meta","href","description","id","React","Component","Home","URL","postReq","path","obj","a","axios","post","response","DEFAULT_PAGINATION","columns","dataIndex","key","render","tag","slice","sorter","datetime","moment","format","pressures","map","onePressure","color","randomColor","seed","flows","oneFlow","Demo","useState","setData","loading","setLoading","total","setTotal","labid","useParams","useEffect","page","limit","filter","lab","parseInt","then","res","console","log","docs","totalDocs","catch","err","finally","style","textAlign","pagination","defaultCurrent","onChange","filters","sorters","finalFilter","Object","entries","value","length","$in","columnKey","order","current","pageSize","ApexChart","dataKey","theme","palette","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","series","Array","keys","toLowerCase","flat","options","chart","height","type","dropShadow","top","left","blur","opacity","dataLabels","stroke","curve","text","align","grid","borderColor","row","colors","xaxis","labels","date","yaxis","RangePicker","DatePicker","Statistics","$gte","$lte","spinning","tip","Index","Navbar","UserOutlined","App","component","exact","Dashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sWAKMA,EAAe,CACnB,CACEC,KAAM,QACNC,MAAO,2CAET,CACED,KAAM,QACNC,MAAO,2CAET,CACED,KAAM,QACNC,MAAO,2CAET,CACED,KAAM,QACNC,MAAO,2CAET,CACED,KAAM,QACNC,MAAO,4CAIUC,E,4MACnBC,MAAQ,CACNC,KAAML,G,4CAGR,WACE,OACE,qBAAKM,UAAU,0BAAf,SACI,cAAC,IAAD,CACEA,UAAU,gBACVC,WAAYC,KAAKJ,MAAMC,KACvBI,WAAY,SAACC,EAAMC,GAAP,OACV,cAAC,IAAD,CAAMC,GAAE,qBAAgBD,EAAQ,GAAhC,SACA,cAAC,IAAKE,KAAN,UACE,cAAC,IAAKA,KAAKC,KAAX,CACEZ,MAAO,mBAAGa,KAAK,qBAAR,SAA8BL,EAAKT,OAC1Ce,YAAaN,EAAKR,SAHNQ,EAAKO,e,GAbcC,IAAMC,W,OCxBxC,SAASC,IACpB,OACI,sBAAKd,UAAU,OAAf,UACI,mBAAGA,UAAU,eAAb,wCACA,mBAAGA,UAAU,aAAb,0CAGA,cAAC,EAAD,O,gJCRCe,EAAM,8CAGNC,EAAO,uCAAG,WAAOC,EAAMC,GAAb,eAAAC,EAAA,+EAEIC,IAAMC,KAAKN,EAAME,EAAMC,GAF3B,cAEbI,EAFa,yBAGZA,GAHY,oGAAH,wDCEdC,EACE,EADFA,EAEG,GAKHC,EAAU,CACd,CACE5B,MAAO,KACP6B,UAAW,MACXC,IAAK,MACLC,OAAQ,SAACC,GAAD,OACN,iCACGA,EAAIC,MAAM,EAAG,GADhB,WAMJ,CACEjC,MAAO,OACP6B,UAAW,OACXC,IAAK,OACLI,QAAQ,EACRH,OAAQ,SAACI,GAAD,OACN,+BACGC,IAAOD,GAAUE,OArBN,2BA0BlB,CACErC,MAAO,WACP8B,IAAK,WACLD,UAAW,WACXE,OAAQ,SAACO,GAAD,OACNA,EAAUC,KAAI,SAACC,EAAa/B,GAAd,OACZ,+BACE,eAAC,IAAD,CAAKgC,MAAOC,IAAY,CAACC,KAAK,YAAD,OAAclC,KAA3C,UACG+B,EADH,2BAAuE/B,WAS/E,CACET,MAAO,YACP8B,IAAK,OACLD,UAAW,OACXE,OAAQ,SAACa,GAAD,OACNA,EAAML,KAAI,SAACM,EAASpC,GAAV,OACR,+BACE,eAAC,IAAD,CAAKgC,MAAOC,IAAY,CAACC,KAAK,YAAD,OAAclC,KAA3C,UACGoC,EADH,OACe,sCADf,mBAAuEpC,YASlE,SAASqC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAO5C,EAAP,KAAa6C,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,mBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACQC,EAAUC,cAAVD,MAmER,OAvBAE,qBAAU,WACRL,GAAW,GACX9B,EAAQ,UAAW,CACjBoC,KAAM7B,EACN8B,MAAO9B,EACP+B,OAAQ,CACNC,IAAKC,SAASP,MAGjBQ,MAAK,YAAiB,IAAVC,EAAS,EAAd3D,KACN4D,QAAQC,IAAI,CAACF,QACbd,EAAQc,EAAIG,MACZb,EAASU,EAAII,cAEdC,OAAM,SAAAC,GACLL,QAAQC,IAAII,MAEbC,SAAQ,WACPnB,GAAW,QAEZ,IAID,gCACE,oBAAIoB,MAAO,CAACC,UAAW,UAAvB,4BAGA,cAAC,IAAD,CACE3C,QAASA,EACT4C,WAAY,CACVC,eAAgB,EAChBtB,MAAOA,GAETuB,SA5EuB,SAACF,EAAYG,EAASC,GAKjD,IAHA,IAAIC,EAAc,GACd3C,EAAS,GAEb,MAAyB4C,OAAOC,QAAQJ,GAAxC,eAAkD,CAA7C,0BAAK7C,EAAL,KAAUkD,EAAV,KACCA,GAASA,EAAMC,SACjBJ,EAAY/C,GAAO,CAAEoD,IAAI,YAAKF,KAIlC,IAAQG,EAAqBP,EAArBO,UAAWC,EAAUR,EAAVQ,MACfD,GAAaC,IACflD,EAAmB,WAAVkD,EAAA,UAAwBD,GAAxB,WAA0CA,IAGrD,IAAiB3B,EAA0BgB,EAAnCa,QAAyB5B,EAAUe,EAApBc,SAGvBpC,GAAW,GACX9B,EAAQ,UAAW,CACjBoC,KAAMA,EACNC,MAAOA,EACPC,OAAO,aACLC,IAAKC,SAASP,IACXwB,GAEL3C,WAED2B,MAAK,YAAiB,IAAVC,EAAS,EAAd3D,KACN6C,EAAQc,EAAIG,MACZb,EAASU,EAAII,cAEdC,OAAM,SAAAC,GACLL,QAAQC,IAAII,MAEbC,SAAQ,WACPnB,GAAW,OAwCT7C,WAAYF,EACZ8C,QAASA,O,sBCtEFsC,MA/Ef,YAAuC,IAAlBpF,EAAiB,EAAjBA,KAAMqF,EAAW,EAAXA,QACnBtF,EAAQ,CACZuF,MAAO,CACLC,QAAS,aAEXC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CAChBH,SAAS,EACTI,MAAO,KAETC,iBAAkB,CAChBL,SAAS,EACTE,MAAO,MAGXI,OAAQ,YAAIC,MApBK,GAoBeC,QAAQ7D,KAAI,SAAC9B,GAAD,MAAY,CACtDV,KAAK,mBAAD,OAAqBU,EAAQ,GACjCN,KAAMA,EAAKoC,KAAI,SAACpC,GAAD,OAAUA,EAAKqF,EAAQa,eAAe5F,MAAQ6F,WAE/DC,QAAS,CACPC,MAAO,CACLC,OAAQ,IACRC,KAAM,OACNC,WAAY,CACVf,SAAS,EACTnD,MAAO,OACPmE,IAAK,GACLC,KAAM,EACNC,KAAM,GACNC,QAAS,KAGbC,WAAY,CACVpB,SAAS,GAEXqB,OAAQ,CACNC,MAAO,UAETlH,MAAO,CACLmH,KAAK,cAAD,OAAgB3B,EAAhB,YACJ4B,MAAO,QAETC,KAAM,CACJC,YAAa,UACbC,IAAK,CACHC,OAAQ,CAAC,UAAW,eACpBT,QAAS,KAGbU,MAAO,CACLzH,MAAO,CACLmH,KAAM,QAERT,KAAM,YAERgB,OAAQvH,EAAKoC,KAAI,qBAAGoF,QACpBC,MAAO,CACL5H,MAAO,CACLmH,KAAK,GAAD,OAAK3B,OAMjB,OACE,qBAAKzE,GAAG,QAAR,SACE,cAAC,IAAD,CACEwF,QAASrG,EAAMqG,QACfL,OAAQhG,EAAMgG,OACdQ,KAAK,OACLD,OAAQ,S,iBCrERoB,G,OAAgBC,IAAhBD,aACFlG,EACE,EADFA,EAEG,GAGM,SAASoG,IACtB,MAAwBhF,mBAAS,IAAjC,mBAAO5C,EAAP,KAAa6C,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACkBI,cAAVD,MAERE,qBAAU,WACRnC,EAAQ,UAAW,CACjBoC,KAAM7B,EACN8B,MAAO9B,IAENkC,MAAK,YAAoB,IAAXC,EAAU,EAAhB3D,KACP6C,EAAQc,EAAIG,MACZF,QAAQC,IAAIF,MAEbK,OAAM,SAACC,GACNL,QAAQC,IAAII,MAEbC,SAAQ,WACPnB,GAAW,QAEd,IA6BH,OACE,sBAAK9C,UAAU,2BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACyH,EAAD,CAAanD,SA9BE,SAACiD,GACpB,kBAAsBA,EAAtB,GAEMjE,EAAS,CACbiE,KAAM,CACJK,KAJJ,KAKIC,KALJ,OAQA/E,GAAW,GACX9B,EAAQ,UAAW,CACjBoC,KAAM7B,EACN8B,MAAO9B,EACP+B,WAECG,MAAK,YAAoB,IAAXC,EAAU,EAAhB3D,KACP6C,EAAQc,EAAIG,MACZF,QAAQC,IAAIF,MAEbK,OAAM,SAACC,GACNL,QAAQC,IAAII,MAEbC,SAAQ,WACPnB,GAAW,WAUV/C,EAAK8E,QAAWhC,EAKf,eAAC,IAAD,CAAMiF,SAAUjF,EAASkF,IAAI,aAA7B,UACE,qBAAK/H,UAAU,gBAAf,SACE,cAAC,EAAD,CAAOD,KAAMA,EAAMqF,QAAS,eAG9B,qBAAKpF,UAAU,gBAAf,SACE,cAAC,EAAD,CAAOD,KAAMA,EAAMqF,QAAS,cAVhC,sECnEK,SAAS4C,IACpB,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,O,oBCJG,SAASC,IACpB,OACI,8BACI,gCACI,qBAAKjI,UAAU,cAAf,SACA,qBAAKA,UAAU,OAAf,SACA,cAAC,IAAD,CAAMM,GAAG,IAAT,SACI,oDAIJ,qBAAKN,UAAU,cAAf,SACI,cAACkI,EAAA,EAAD,W,OCSLC,MAhBf,WACE,OACE,qBAAKnI,UAAU,MAAf,SACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,wBAAQA,UAAU,aAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,KAAK,IAAImH,UAAWtH,EAAMuH,OAAK,IACtC,cAAC,IAAD,CAAOpH,KAAK,oBAAoBmH,UAAWE,EAAWD,OAAK,eCN1DE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASpH,OACP,cAAC,IAAMqH,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.3796e231.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar } from 'antd';\nimport './List.scss';\nimport { Link } from \"react-router-dom\";\n\nconst INITIAL_DATA = [\n  {\n    name: \"Lab 1\",\n    title: \"Check out the details of your lab here.\"\n  },\n  {\n    name: \"Lab 2\",\n    title: \"Check out the details of your lab here.\"\n  },\n  {\n    name: \"Lab 3\",\n    title: \"Check out the details of your lab here.\"\n  },\n  {\n    name: \"Lab 4\",\n    title: \"Check out the details of your lab here.\"\n  },\n  {\n    name: \"Lab 5\",\n    title: \"Check out the details of your lab here.\"\n  },\n];\n\nexport default class InfiniteListExample extends React.Component {\n  state = {\n    data: INITIAL_DATA\n  };\n\n  render() {\n    return (\n      <div className=\"demo-infinite-container\">\n          <List\n            className=\"demo-infinite\"\n            dataSource={this.state.data}\n            renderItem={(item, index) => (\n              <Link to={`/dashboard/${index + 1}`}>\n              <List.Item key={item.id}>\n                <List.Item.Meta\n                  title={<a href=\"https://ant.design\">{item.name}</a>}\n                  description={item.title}\n                />\n              </List.Item>\n              </Link>\n            )}\n          >\n          </List>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport List from '../../components/list/List';\nimport './Home.scss';\n\nexport default function Home() {\n    return (\n        <div className=\"home\">\n            <p className=\"home_heading\">Welcome to your dashboard!</p>\n            <p className=\"home_texts\">\n                Here are the different labs.\n            </p>\n            <List />\n        </div>\n    )\n}\n","import axios from \"axios\";\n\n// export const URL = 'http://localhost:8080'; //production\nexport const URL = 'https://iot-dashboard-backend.herokuapp.com'; //URL\n\n// preset requests set\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(URL + path, obj);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getReq = async (path) => {\n  try {\n    const response = await axios.get(URL + path);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment  from 'moment';\nimport { useParams } from \"react-router-dom\";\nimport randomColor from \"randomcolor\";\nimport { Table, Tag, Radio } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { postReq } from \"../../api\";\n\nconst DEFAULT_PAGINATION = {\n  page: 1,\n  limit: 10\n};\n\nconst DATE_FORMAT = \"YYYY-MM-DD HH:mm:ss\"\n\nconst columns = [\n  {\n    title: \"Id\",\n    dataIndex: \"_id\",\n    key: \"_id\",\n    render: (tag) => (\n      <span>\n        {tag.slice(0, 7)}...\n      </span>\n    ),\n  },\n\n  {\n    title: \"Date\",\n    dataIndex: \"date\",\n    key: \"date\",\n    sorter: true,\n    render: (datetime) => (\n      <span>\n        {moment(datetime).format(DATE_FORMAT)}\n      </span>\n    ),\n  },\n\n  {\n    title: \"Pressure\",\n    key: \"pressure\",\n    dataIndex: \"pressure\",\n    render: (pressures) => (\n      pressures.map((onePressure, index) => (\n        <span>\n          <Tag color={randomColor({seed: `pressure-${index}`})} key={`pressure-${index}`}>\n            {onePressure} Pa\n          </Tag>\n        </span>\n      ))\n    ),\n  },\n\n\n  {\n    title: \"Flow rate\",\n    key: \"flow\",\n    dataIndex: \"flow\",\n    render: (flows) => (\n      flows.map((oneFlow, index) => (\n        <span>\n          <Tag color={randomColor({seed: `pressure-${index}`})} key={`pressure-${index}`}>\n            {oneFlow} N/m<sup>2</sup>\n          </Tag>\n        </span>\n      ))\n    ),\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [total, setTotal] = useState(0);\n  const { labid } = useParams();\n\n  const tablesParamsOnChange = (pagination, filters, sorters) => {\n    // loop through the filters to construct a filter array\n    let finalFilter = {};\n    let sorter = \"\";\n    // generate a filter object based on the filters entered\n    for (let [key, value] of Object.entries(filters)) {\n      if (value && value.length) {\n        finalFilter[key] = { $in: [...value] };\n      }\n    }\n    // generate the sorter\n    const { columnKey, order } = sorters;\n    if (columnKey && order) {\n      sorter = order === \"ascend\" ? `${columnKey}` : `-${columnKey}`;\n    }\n    // generate pagination params\n    const { current: page, pageSize: limit } = pagination;\n  \n    // fetch the required data\n    setLoading(true);\n    postReq('/filter', {\n      page: page,\n      limit: limit,\n      filter: {\n        lab: parseInt(labid),\n        ...finalFilter\n      },\n      sorter\n    })\n    .then(({data:res}) => {\n      setData(res.docs);\n      setTotal(res.totalDocs);\n    })\n    .catch(err => {\n      console.log(err);\n    })\n    .finally(() => {\n      setLoading(false)\n    })\n  };\n\n\n  useEffect(() => {\n    setLoading(true);\n    postReq('/filter', {\n      page: DEFAULT_PAGINATION.page,\n      limit: DEFAULT_PAGINATION.limit,\n      filter: {\n        lab: parseInt(labid)\n      }\n    })\n    .then(({data:res}) => {\n      console.log({res});\n      setData(res.docs);\n      setTotal(res.totalDocs);\n    })\n    .catch(err => {\n      console.log(err);\n    })\n    .finally(() => {\n      setLoading(false)\n    })\n  }, []);\n\n\n  return (\n    <div>\n      <h2 style={{textAlign: \"center\"}}>\n        Live Data View\n      </h2>\n      <Table\n        columns={columns}\n        pagination={{\n          defaultCurrent: 1,\n          total: total,\n        }}\n        onChange={tablesParamsOnChange}\n        dataSource={data}\n        loading={loading}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst SENSOR_COUNT = 3; //the number of sensors there are;\n\nfunction ApexChart({ data, dataKey }) {\n  const state = {\n    theme: {\n      palette: \"palette10\", // upto palette10\n    },\n    animations: {\n      enabled: true,\n      easing: \"easeinout\",\n      speed: 800,\n      animateGradually: {\n        enabled: true,\n        delay: 150,\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 350,\n      },\n    },\n    series: [...Array(SENSOR_COUNT).keys()].map((index) => ({\n      name: `Pressure Sensor ${index + 1}`,\n      data: data.map((data) => data[dataKey.toLowerCase()][index]).flat(),\n    })),\n    options: {\n      chart: {\n        height: 700,\n        type: \"line\",\n        dropShadow: {\n          enabled: true,\n          color: \"#000\",\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      title: {\n        text: `A graph of ${dataKey} vs Time`,\n        align: \"left\",\n      },\n      grid: {\n        borderColor: \"#e7e7e7\",\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      xaxis: {\n        title: {\n          text: \"Date\",\n        },\n        type: \"datetime\",\n      },\n      labels: data.map(({ date }) => date),\n      yaxis: {\n        title: {\n          text: `${dataKey}`,\n        },\n      },\n    },\n  };\n\n  return (\n    <div id=\"chart\">\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"line\"\n        height={350}\n      />\n    </div>\n  );\n}\n\nexport default ApexChart;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Chart from \"./chart\";\nimport { postReq } from \"../../../api\";\nimport { DatePicker, Space, Spin } from \"antd\";\n\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport \"./Statistic.scss\";\n\nconst { RangePicker } = DatePicker;\nconst DEFAULT_PAGINATION = {\n  page: 1,\n  limit: 10,\n};\n\nexport default function Statistics() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { labid } = useParams();\n\n  useEffect(() => {\n    postReq(\"/filter\", {\n      page: DEFAULT_PAGINATION.page,\n      limit: DEFAULT_PAGINATION.limit,\n    })\n      .then(({ data: res }) => {\n        setData(res.docs);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const onDateChange = (date) => {\n    const [start, stop] = date;\n    // fetch new data based on the pagination data\n    const filter = {\n      date: {\n        $gte: start,\n        $lte: stop\n      },\n    };\n    setLoading(true);\n    postReq(\"/filter\", {\n      page: DEFAULT_PAGINATION.page,\n      limit: DEFAULT_PAGINATION.limit,\n      filter\n    })\n      .then(({ data: res }) => {\n        setData(res.docs);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"site-statistic-demo-card\">\n      <div className=\"range-wrapper\">\n        <RangePicker onChange={onDateChange} />\n      </div>\n      {\n        !data.length && !loading ? (\n          <h2>\n            No data to display for this range\n          </h2>\n        ):(\n          <Spin spinning={loading} tip=\"Loading...\">\n            <div className=\"chart-wrapper\">\n              <Chart data={data} dataKey={\"Pressure\"} />\n            </div>\n\n            <div className=\"chart-wrapper\">\n              <Chart data={data} dataKey={\"flow\"} />\n            </div>\n          </Spin>\n        )\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport Table from '../../components/table/Table';\nimport Statistic from '../../components/table/statistic/Statistics';\n// import './Dashboard.scss';\n\nexport default function Index() {\n    return (\n        <div>\n            <Statistic />\n            <Table />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { UserOutlined } from '@ant-design/icons';\nimport './Navbar.scss'\n\nexport default function Navbar() {\n    return (\n        <div>\n            <nav>\n                <div className='left_navbar'>\n                <div className='menu'>\n                <Link to=\"/\">\n                    <p>IOT DASHBOARD</p>\n                </Link>\n                </div>\n                </div>\n                <div className=\"right_icons\">\n                    <UserOutlined  />\n                </div>\n            </nav>\n        </div>\n    )\n}\n","import Home from './pages/home/Home';\nimport Dashboard from './pages/dashboard/Index';\nimport Navbar from './components/Navbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <Navbar />\n          <header className=\"App-header\">\n            <Switch>\n              <Route path=\"/\" component={Home} exact/>\n              <Route path=\"/dashboard/:labid\" component={Dashboard} exact />\n            </Switch>\n          </header>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}